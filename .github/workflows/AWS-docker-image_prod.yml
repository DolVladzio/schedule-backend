name: "Prod-AWS: Build backend docker image and push to a GCR"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  frontend:
    name: Build and Push Backend Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.ACCESS_REPO_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Define Timestamp Environment Variable
      run: echo "TIMESTAMP=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

    - name: Set The Frontend Image Name
      run: |
        echo "BACKEND_IMAGE=${{ secrets.CR_NAME_GITHUB }}/"${{ secrets.DOCKER_USERNAME }}"/schedule-backend/backend:${{ env.TIMESTAMP }}" >> $GITHUB_ENV

    - name: Build Backend Docker Image
      run: |
        docker build -t ${{ env.BACKEND_IMAGE }} .

    - name: Run Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.BACKEND_IMAGE }}
        format: table
        exit-code: 0
        ignore-unfixed: true
        vuln-type: os,library
        severity: CRITICAL,HIGH,MEDIUM

    - name: Save Trivy Report
      run: |
        trivy image --format json --output trivy-report-${{ env.TIMESTAMP }}.json ${{ env.BACKEND_IMAGE }}

    - name: Upload Trivy Report Artifact
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report-${{ env.TIMESTAMP }}.json
        path: trivy-report-${{ env.TIMESTAMP }}.json

    - name: Push Backend Docker Image
      run: |
        docker push ${{ env.BACKEND_IMAGE }}

    # - name: Trigger the Ansible runner
    #   uses: peter-evans/repository-dispatch@v3
    #   with:
    #     token: ${{ secrets.ACCESS_REPO_TOKEN }}
    #     repository: DolVladzio/schedule-Ansible
    #     event-type: deploy-backend-dev
    #     client-payload: |
    #       {
    #         "backend_image": "${{ env.BACKEND_IMAGE }}",
    #         "env": "dev"
    #       }
